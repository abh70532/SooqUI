@model WrokFlowWeb.ViewModel.SupplierRequest.SupplierRequestListViewModel
@{
    ViewBag.Title = "Supplier Requests";
}
@{
    ViewBag.PageName = "SupplierRequest";
}


<div class="w-100 h-100 bg-white p-10 border-radius-5 box-shadow">
    <div class="d-flex flex-column h-100 w-100">
        <div class="d-flex justify-content-end pb-2">
            <a class="btn btn-primary" asp-action="Get" asp-controller="SupplierRequest"> Add Supplier Request</a>
        </div>
        <div class="d-flex flex-1 overflow-y w-100 h-100 grid-h-100">
            @(Html
    .Grid(Model.SupplierRequests)
    .Build(columns =>
    {
        columns.Add(model => model.SupplierRequestId).Titled("Supplier Code");
        columns.Add(model => model.SuplierTypeRequest.SuplierTypeRequest).Titled("Suplier Type");
        columns.Add(model => model.RequestTypeMaster.RequestType).Titled("Request Type");
        columns.Add(model => model.RequesterName).Titled("Requester Name");
        columns.Add(model => model.SupplierName).Titled("Supplier Name");
        columns.Add(model => model.PostalCode).Titled("Postal Code");
        columns.Add(model => model.EmailId).Titled("Email");
        columns.Add(model => model.ContactPhone).Titled("Contact No");
        columns.Add(model => model.IsRejected ? "Rejected" : model.SupplierRequestApprovalId > 0? model.SupplierRequestApprovalLog.Where(x=>  x.SupplierRequestApprovalId==model.SupplierRequestApprovalId).FirstOrDefault().RoleApprovalMaster.Role.Name: "Approved").Titled("Approval Status");

        columns.Add(model => string.Join(',',model.SupplierRequestCategoryMapping.Select(y=>y.CategoryMaster.Category))).Titled("Category");
        columns.Add(model => !model.IsEditable.GetValueOrDefault()? $"<a class=\"btn btn-sm btn-warning whiteColor\" href=\"ViewApprovals?requestid={model.SupplierRequestId}&moduleid=1\"><i class=\"fa fa-eye\"></i>&nbsp;View Approvals</a>" : $"<a class=\"btn btn-sm btn-info whiteColor\" href=\"Edit?requestid={model.SupplierRequestId}\"><i class=\"fa fa-pencil-alt\"></i>&nbsp;Edit</a>").Encoded(false).Css("text-right");
        //columns.Add(model => $"<a href=\"@Url.Action('Delete', 'movies', new { requestid = model.SupplierRequestId })\">Edit</a>").Encoded(false);

    })
     .Empty("No supplier request data to be displayed")
    .Pageable(pager =>
    {
        pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 10, "10" }, { 25, "25" } };
        pager.ShowPageSizes = true;
        pager.PagesToDisplay = 3;
        pager.CurrentPage = 1;
        pager.RowsPerPage = 10;
    })
)
        </div>
     </div>
</div>
    


    
